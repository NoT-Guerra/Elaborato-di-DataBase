-- =============================================================
--  Schema: "noleggio_veicoli" (MySQL version)
--  Descrizione: script SQL per la creazione del database
--               compatibile con MySQL â‰¥ 8.0
-- =============================================================

-- ===========================
--  Creazione del database
-- ===========================
CREATE DATABASE IF NOT EXISTS noleggio_veicoli;
USE noleggio_veicoli;

-- =============================================================
--  TABELLE DI BASE
-- =============================================================

CREATE TABLE utente (
    id_utente        INT AUTO_INCREMENT PRIMARY KEY,
    nome             VARCHAR(50)  NOT NULL,
    cognome          VARCHAR(50)  NOT NULL,
    email            VARCHAR(255) NOT NULL UNIQUE,
    password         VARCHAR(255) NOT NULL,
    stato_account    VARCHAR(10) NOT NULL DEFAULT 'attivo',
    data_creazione   TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE cliente (
    id_cliente INT PRIMARY KEY,
    FOREIGN KEY (id_cliente) REFERENCES utente(id_utente) ON DELETE CASCADE
);

CREATE TABLE proprietario (
    id_proprietario INT PRIMARY KEY,
    FOREIGN KEY (id_proprietario) REFERENCES utente(id_utente) ON DELETE CASCADE
);

CREATE TABLE indirizzo (
    id_indirizzo  INT AUTO_INCREMENT PRIMARY KEY,
    id_cliente    INT NOT NULL,
    via           VARCHAR(100) NOT NULL,
    cap           VARCHAR(10)  NOT NULL,
    citta         VARCHAR(50)  NOT NULL,
    provincia     VARCHAR(50)  NOT NULL,
    nazione       VARCHAR(50)  NOT NULL,
    FOREIGN KEY (id_cliente) REFERENCES cliente(id_cliente) ON DELETE CASCADE
);

CREATE TABLE localita (
    id_localita INT AUTO_INCREMENT PRIMARY KEY,
    citta       VARCHAR(50) NOT NULL,
    provincia   VARCHAR(50) NOT NULL,
    regione     VARCHAR(50) NOT NULL
);

CREATE TABLE inserzioni (
    id_inserzione    INT AUTO_INCREMENT PRIMARY KEY,
    id_proprietario  INT NOT NULL,
    id_localita      INT NOT NULL,
    descrizione      TEXT NOT NULL,
    prezzo_totale    DECIMAL(10,2) NOT NULL DEFAULT 0.00,
    data_creazione   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id_proprietario) REFERENCES proprietario(id_proprietario) ON DELETE CASCADE,
    FOREIGN KEY (id_localita) REFERENCES localita(id_localita)
);


CREATE TABLE categoria_veicolo (
    id_categoria   INT AUTO_INCREMENT PRIMARY KEY,
    nome_categoria VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE veicoli (
    id_veicolo             INT AUTO_INCREMENT PRIMARY KEY,
    id_inserzione          INT NOT NULL,
    id_categoria           INT NOT NULL,
    marca                  VARCHAR(50) NOT NULL,
    modello                VARCHAR(50) NOT NULL,
    anno_immatricolazione  SMALLINT NOT NULL CHECK (anno_immatricolazione >= 1900),
    tipologia_carburante   ENUM('benzina','diesel','elettrico','ibrido','GPL','metano') NOT NULL,
    potenza                SMALLINT NOT NULL CHECK (potenza > 0),
    adatto_neopatentati    BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (id_inserzione) REFERENCES inserzioni(id_inserzione) ON DELETE CASCADE,
    FOREIGN KEY (id_categoria)  REFERENCES categoria_veicolo(id_categoria)
);

CREATE TABLE manutenzione (
    id_manutenzione INT AUTO_INCREMENT PRIMARY KEY,
    id_veicolo      INT NOT NULL,
    data            DATE NOT NULL,
    tipo            VARCHAR(50) NOT NULL,
    costo           DECIMAL(10,2) NOT NULL CHECK (costo >= 0),
    descrizione     TEXT,
    FOREIGN KEY (id_veicolo) REFERENCES veicoli(id_veicolo) ON DELETE CASCADE
);

CREATE TABLE luogo (
    id_luogo  INT AUTO_INCREMENT PRIMARY KEY,
    nome      VARCHAR(100) NOT NULL,
    tipologia ENUM('deposito','ritiro','deposito_ritiro') NOT NULL,
    ritiro    BOOLEAN DEFAULT FALSE,
    deposito  BOOLEAN DEFAULT FALSE
);

CREATE TABLE periodo (
    id_periodo   INT AUTO_INCREMENT PRIMARY KEY,
    data_inizio  DATE NOT NULL,
    data_fine    DATE NOT NULL,
    CHECK (data_fine > data_inizio)
);

CREATE TABLE tariffario (
    id_tariffario INT AUTO_INCREMENT PRIMARY KEY,
    id_periodo    INT NOT NULL UNIQUE,
    sconto        DECIMAL(5,2) NOT NULL CHECK (sconto >= 0),
    FOREIGN KEY (id_periodo) REFERENCES periodo(id_periodo) ON DELETE CASCADE
);

CREATE TABLE noleggio (
    id_noleggio     INT AUTO_INCREMENT PRIMARY KEY,
    id_cliente      INT NOT NULL,
    id_veicolo      INT NOT NULL,
    id_luogo        INT NOT NULL,
    id_periodo      INT,
    id_inserzione   INT,
    data_inizio     DATE NOT NULL,
    data_fine       DATE NOT NULL,
    FOREIGN KEY (id_cliente)    REFERENCES cliente(id_cliente) ON DELETE CASCADE,
    FOREIGN KEY (id_veicolo)    REFERENCES veicoli(id_veicolo),
    FOREIGN KEY (id_luogo)      REFERENCES luogo(id_luogo),
    FOREIGN KEY (id_periodo)    REFERENCES periodo(id_periodo),
    FOREIGN KEY (id_inserzione) REFERENCES inserzioni(id_inserzione),
    CHECK (data_fine > data_inizio)
);


CREATE TABLE pagamento (
    id_pagamento  INT AUTO_INCREMENT PRIMARY KEY,
    id_noleggio   INT UNIQUE NOT NULL,
    data          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    importo       DECIMAL(10,2) NOT NULL CHECK (importo >= 0),
    metodo_pagamento ENUM('carta_credito','bancomat','paypal','bonifico') NOT NULL,
    stato_pagamento  ENUM('in_attesa','completato','fallito') NOT NULL,
    FOREIGN KEY (id_noleggio) REFERENCES noleggio(id_noleggio) ON DELETE CASCADE
);

CREATE TABLE sinistro (
    id_sinistro  INT AUTO_INCREMENT PRIMARY KEY,
    id_noleggio  INT NOT NULL,
    data         DATE NOT NULL,
    descrizione  TEXT NOT NULL,
    costo        DECIMAL(10,2) NOT NULL CHECK (costo >= 0),
    FOREIGN KEY (id_noleggio) REFERENCES noleggio(id_noleggio) ON DELETE CASCADE
);

CREATE TABLE recensioni (
    id_recensione   INT AUTO_INCREMENT PRIMARY KEY,
    id_noleggio     INT NOT NULL,
    voto            SMALLINT NOT NULL CHECK (voto BETWEEN 1 AND 5),
    commento        TEXT,
    data_recensione TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id_noleggio) REFERENCES noleggio(id_noleggio) ON DELETE CASCADE
);

CREATE TABLE accessorio (
    id_accessorio INT AUTO_INCREMENT PRIMARY KEY,
    id_inserzione INT NOT NULL,
    nome          VARCHAR(100) NOT NULL,
    descrizione   TEXT,
    FOREIGN KEY (id_inserzione) REFERENCES inserzioni(id_inserzione) ON DELETE CASCADE
);

CREATE TABLE accessori_inclusi (
    id_accessorio INT PRIMARY KEY,
    FOREIGN KEY (id_accessorio) REFERENCES accessorio(id_accessorio) ON DELETE CASCADE
);

CREATE TABLE accessori_extra (
    id_accessorio INT PRIMARY KEY,
    prezzo        DECIMAL(10,2) NOT NULL CHECK (prezzo >= 0),
    FOREIGN KEY (id_accessorio) REFERENCES accessorio(id_accessorio) ON DELETE CASCADE
);

-- Indici
CREATE INDEX idx_noleggio_cliente  ON noleggio(id_cliente);
CREATE INDEX idx_noleggio_veicolo  ON noleggio(id_veicolo);
CREATE INDEX idx_recensione_noleggio ON recensioni(id_noleggio);
CREATE INDEX idx_manutenzione_data ON manutenzione(data);

-- FINE SCRIPT


