-- =============================================================
--  Schema: "noleggio_veicoli" (MySQL version)
--  Descrizione: script SQL per la creazione del database
--               compatibile con MySQL ≥ 8.0
-- =============================================================

-- ===========================
--  Creazione del database
-- ===========================
CREATE DATABASE IF NOT EXISTS noleggio_veicoli;
USE noleggio_veicoli;

-- =============================================================
--  TABELLE DI BASE
-- =============================================================

CREATE TABLE INDIRIZZO (
    id_indirizzo INT PRIMARY KEY,
    via VARCHAR(100),
    cap VARCHAR(10),
    città VARCHAR(50),
    provincia VARCHAR(50),
    nazione VARCHAR(50)
);

CREATE TABLE UTENTE (
id_utente INT NOT NULL AUTO_INCREMENT PRIMARY KEY;,
    nome VARCHAR(50),
    cognome VARCHAR(50),
    email VARCHAR(100),
    password VARCHAR(100),
    stato_account BOOLEAN,
    id_indirizzo INT,
    FOREIGN KEY (id_indirizzo) REFERENCES INDIRIZZO(id_indirizzo)
);

CREATE TABLE CLIENTE (
    id_utente INT PRIMARY KEY,
    FOREIGN KEY (id_utente) REFERENCES UTENTE(id_utente)
);

CREATE TABLE PROPRIETARIO (
    id_utente INT PRIMARY KEY,
    FOREIGN KEY (id_utente) REFERENCES UTENTE(id_utente)
);

CREATE TABLE INSERZIONE (
    id_inserzione INT PRIMARY KEY,
    descrizione TEXT,
    id_utente INT,
    FOREIGN KEY (id_utente) REFERENCES PROPRIETARIO(id_utente)
);

CREATE TABLE LOCALITÀ (
    id_località INT PRIMARY KEY,
    città VARCHAR(50),
    provincia VARCHAR(50),
    regione VARCHAR(50)
);


CREATE TABLE CATEGORIA_VEICOLO (
    id_categoria INT PRIMARY KEY,
    nome_categoria VARCHAR(50)
);

CREATE TABLE VEICOLO (
    targa VARCHAR(7) PRIMARY KEY,
    peso DECIMAL(10,2),
    marca VARCHAR(50),
    modello VARCHAR(50),
    anno_immatricolazione INT,
    tipologia_carburante VARCHAR(50),
    potenza DECIMAL(10,2),
    adatto_neopatentati BOOLEAN,
    id_categoria INT,
    FOREIGN KEY (id_categoria) REFERENCES CATEGORIA_VEICOLO(id_categoria)
);



CREATE TABLE ACCESSORIO (
    id_accessorio INT PRIMARY KEY,
    nome VARCHAR(50),
    descrizione TEXT
);

CREATE TABLE ACCESSORI_EXTRA (
    id_accessorio INT,
    prezzo DECIMAL(10,2),
    FOREIGN KEY (id_accessorio) REFERENCES ACCESSORIO(id_accessorio)
);

CREATE TABLE ACCESSORI_INCLUSI (
    id_accessorio INT PRIMARY KEY,
    FOREIGN KEY (id_accessorio) REFERENCES ACCESSORIO(id_accessorio)
);

CREATE TABLE MANUTENZIONE (
    id_manutenzione INT PRIMARY KEY,
    data DATE,
    tipo VARCHAR(50),
    costo DECIMAL(10,2),
    descrizione TEXT,
    targa VARCHAR(7),
    FOREIGN KEY (targa) REFERENCES VEICOLO(targa)
);

CREATE TABLE RECENSIONE (
    id_recensione INT PRIMARY KEY,
    voto INT,
    commento TEXT,
    data_recensione DATE
);

CREATE TABLE LUOGO (
    id_luogo INT PRIMARY KEY,
    nome VARCHAR(100),
    tipologia VARCHAR(50),
    ritiro BOOLEAN,
    deposito BOOLEAN
);

CREATE TABLE PERIODO (
    id_periodo INT PRIMARY KEY,
    dataInizioPeriodo DATE,
    dataFinePeriodo DATE
);

CREATE TABLE TARIFFARIO (
    id_tariffario INT PRIMARY KEY,
    sconto DECIMAL(5,2)
);

CREATE TABLE determina_tariffa_PERIODO (
    id_tariffario INT,
    id_periodo INT,
    costo DECIMAL(10,2),
    PRIMARY KEY (id_tariffario, id_periodo),
    FOREIGN KEY (id_tariffario) REFERENCES TARIFFARIO(id_tariffario),
    FOREIGN KEY (id_periodo) REFERENCES PERIODO(id_periodo)
);

CREATE TABLE SINISTRO (
    id_sinistro INT PRIMARY KEY,
    data DATE,
    descrizione TEXT,
    costo DECIMAL(10,2)
);

CREATE TABLE NOLEGGIO (
    id_noleggio INT PRIMARY KEY,
    data_inizio DATE,
    data_fine DATE,
    id_cliente INT,
    id_proprietario INT,
    id_veicolo VARCHAR(7),
    id_pagamento INT,
    FOREIGN KEY (id_cliente) REFERENCES CLIENTE(id_utente),
    FOREIGN KEY (id_proprietario) REFERENCES PROPRIETARIO(id_utente),
    FOREIGN KEY (id_veicolo) REFERENCES VEICOLO(targa)
);

CREATE TABLE PAGAMENTO (
    id_pagamento INT PRIMARY KEY,
    data DATE,
    importo DECIMAL(10,2),
    metodo_pagamento VARCHAR(50),
    stato_pagamento VARCHAR(50)
);

CREATE TABLE riguardo (
    id_recensione INT,
    id_noleggio INT,
    PRIMARY KEY (id_recensione, id_noleggio),
    FOREIGN KEY (id_recensione) REFERENCES RECENSIONE(id_recensione),
    FOREIGN KEY (id_noleggio) REFERENCES NOLEGGIO(id_noleggio)
);

CREATE TABLE saldato (
    id_noleggio INT NOT NULL,
    id_pagamento INT NOT NULL,
    PRIMARY KEY (id_noleggio, id_pagamento),
    CONSTRAINT fk_saldato_noleggio FOREIGN KEY (id_noleggio) REFERENCES noleggio(id_noleggio) ,
    CONSTRAINT fk_saldato_pagamento FOREIGN KEY (id_pagamento) REFERENCES pagamento(id_pagamento)
);


CREATE table riguarda (
id_inserzione INT,
targa VARCHAR(7),
FOREIGN KEY (id_inserzione) REFERENCES inserzione(id_inserzione),
FOREIGN KEY (targa) REFERENCES veicolo(targa)
);


CREATE TABLE deposita (
    id_luogo INT,
    id_noleggio INT,
    PRIMARY KEY (id_luogo, id_noleggio),
    FOREIGN KEY (id_luogo) REFERENCES LUOGO(id_luogo),
    FOREIGN KEY (id_noleggio) REFERENCES NOLEGGIO(id_noleggio)
);

CREATE TABLE sostenuto (
    id_noleggio INT,
    id_periodo INT,
    PRIMARY KEY (id_noleggio, id_periodo),
    FOREIGN KEY (id_noleggio) REFERENCES NOLEGGIO(id_noleggio),
    FOREIGN KEY (id_periodo) REFERENCES PERIODO(id_periodo)
);

CREATE TABLE avviene_durante (
    id_noleggio INT,
    id_sinistro INT,
    PRIMARY KEY (id_noleggio, id_sinistro),
    FOREIGN KEY (id_noleggio) REFERENCES NOLEGGIO(id_noleggio),
    FOREIGN KEY (id_sinistro) REFERENCES SINISTRO(id_sinistro)
);

CREATE TABLE riferita (
    id_località INT,
    id_veicolo VARCHAR(7),
    PRIMARY KEY (id_località, id_veicolo),
    FOREIGN KEY (id_località) REFERENCES LOCALITÀ(id_località),
    FOREIGN KEY (id_veicolo) REFERENCES VEICOLO(targa)
);

CREATE TABLE Coinvolge (
    id_proprietario INT,
    id_veicolo VARCHAR(7),
    PRIMARY KEY (id_proprietario, id_veicolo),
    FOREIGN KEY (id_proprietario) REFERENCES PROPRIETARIO(id_utente),
    FOREIGN KEY (id_veicolo) REFERENCES VEICOLO(targa)
);

-- FINE SCRIPT




